spring:
  config:
    activate:
      on-profile: dev
  application:
    name: infinite-of-cute-animals

  # Kafka config
  kafka:
    bootstrap-servers: 10.0.1.134:9092,10.0.1.139:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        # Producer
        acks: "1"
        retries: 3
        batch.size: 16384
        linger.ms: 5
        buffer.memory: 33554432
        # JSON
        spring.json.add.type.headers: false
    consumer:
      group-id: animal-feed-service
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      enable-auto-commit: true
      auto-commit-interval: 1000
      properties:
        # Consumer
        session.timeout.ms: 30000
        heartbeat.interval.ms: 3000
        # JSON
        spring.json.trusted.packages: "com.wooly.infinite_of_cute_animals"
        spring.json.use.type.headers: false
        spring.json.value.default.type: "com.wooly.infinite_of_cute_animals"

  # Redis
  data:
    redis:
      host: 10.0.1.207
      port: 6379
      database: 0
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 2
          max-wait: -1ms
        shutdown-timeout: 100ms
      # Redis
      timeout: 3000ms

# server default
server:
  port: 8888
  servlet:
    context-path: /
  tomcat:
    max-threads: 200
    min-spare-threads: 10

# app properties
app:
  cache:
    animal-pool-key: "animal-image-pool"
    animal-feed-key: "animal-feed"
    stats-key-prefix: "stats"
    animal-pool-ttl: 24h
    feed-max-size: 1000
    stats-retention: 7d
  kafka:
    topics:
      animal-stream: "animal-images-stream"
      animal-reactions: "animal-reactions"
  streaming:
    interval: 3000
    batch-size: 20

# logging
logging:
  level:
    com.example.animalfeed: DEBUG
    org.springframework.kafka: INFO
    org.springframework.data.redis: INFO
    org.apache.kafka: WARN
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"
  file:
    name: logs/animal-feed-service.log
    max-size: 10MB
    max-history: 30

# Spring Boot Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,kafka,redis
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true

# local
---
spring:
  config:
    activate:
      on-profile: local
  kafka:
    bootstrap-servers: localhost:9092
  data:
    redis:
      host: localhost
      port: 6379

management:
  health:
    redis:
      enabled: false
  endpoints:
    web:
      exposure:
        include: health,info,metrics

app:
  streaming:
    interval: 1000